HTrees <- read.csv("http://harvardforest.fas.harvard.edu/data/p03/hf032/hf032-02-tree.csv")
HTreesSub <- subset(HTrees, block=="SE11" & meas3yr==1991 & species=="ACRU"|block=="SE11" & meas3yr==1991 & species=="QUAL")
HTreesSub <- droplevels(HTreesSub)
HTreesSub91 <- HTreesSub[,c(3:6,13)]
library(spatstat)
library(maptools)
library(sp)
coordinates(HTreesSub91) <- c('xsite', 'ysite')
RipleyTrees <- HTreesSub91[,2]
acru <- subset(RipleyTrees, species=="ACRU") #Acer rubrum subset
qual <- subset(RipleyTrees, species=="QUAL") #Quercus alba subset
acru.ppp <- as(acru, "ppp")
qual.ppp <- as(qual, "ppp")
plot(Kest(acru.ppp, correction="best"))
plot(Kest(qual.ppp, correction="best"))
plot(Kest(acru.ppp, correction="none"))
plot(Kest(qual.ppp, correction="none"))
plot(envelope(acru.ppp, Kest, correction="best", nsim = 100)) #100 simulations
plot(envelope(qual.ppp, Kest, correction="best", nsim = 100)) #100 simulations
RipleyTrees.ppp <- as(RipleyTrees,"ppp")
plot(envelope(RipleyTrees.ppp, Kcross, i="ACRU", j="QUAL",nsim=100))
HTreesSub2 <- subset(HTrees, block=="SE11" & meas3yr==1991 & species=="ACRU"|species=="QUAL")
help(Kest)
ln(1)
log(1)
help(log)
log(100)
dem <- raster('D:/TregliaFiles/GIS/Data/US_Data/NationWide/NED_30m/n37w096/imgn37w096_1.img')
library(raster)
dem <- raster('D:/TregliaFiles/GIS/Data/US_Data/NationWide/NED_30m/n37w096/imgn37w096_1.img')
plot(dem)
help(plot)
str(dem)
dem <- raster('D:/TregliaFiles/GIS/Data/US_Data/NationWide/NED_30m/n37w096/imgn37w096_1.img')
plot(dem)
mean(dem)
cellStats(dem, mean)
str(dem)
class(dem)
projectRaster(dem, dem2, crs=5070)
projectRaster(dem, crs=5070)
+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=1,1,-1,0,0,0,0 +units=m +no_defs
demAlbers <- projectRaster(dem, "
+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=1,1,-1,0,0,0,0 +units=m +no_defs
demAlbers <- projectRaster(dem, "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=1,1,-1,0,0,0,0 +units=m +no_defs")"
demAlbers <- projectRaster(dem, "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=1,1,-1,0,0,0,0 +units=m +no_defs")
demAlbers <- projectRaster(dem, "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=1,1,-1,0,0,0,0 +units=m +no_defs")
demAlbers <- projectRaster(dem, crs = "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=1,1,-1,0,0,0,0 +units=m +no_defs")
help(summary)
summary(dem)
help(crop)
help(extent)
CatoosaExtent <- extent(46455, 56145, 1458705, 1465005) #order expected is 'xmin, xmax, ymin, ymax'
demCatoosa <- crop(demAlbers, CatoosaExtent)
plot(demCatoosa)
plot(demCatoosa)
hist(demCatoosa)
cellstats(demCatoosa, skew)
cellStats(demCatoosa, skew)
demCatoosaMean <- cellStats(demCatoosa, mean)
cellStats(demCatoosa, skewness)
help(skewness)
cellStats(demCatoosa, stdev)
help(stdev)
cellStats(demCatoosa, sd)
demCatoosaDeviance <- demCatoosa - demCatoosaMean
demCatoosaDeviance <- abs(demCatoosa - demCatoosaMean)
summary(demCatoosaDeviance)
demCatoosaMean <- cellStats(demCatoosa, mean)
demCatoosaDeviance <- abs(demCatoosa - demCatoosaMean)
CatoosaAvgRough <- cellStats(demCatoosaDeviance, mean)
hist(demCatoosaDeviance)
help(terrain)
slopeCatoosa <- terrain(demCatoosa, opt='slope', units='degrees')
help(rasterToPolygons)
help(writeOGR)
cellStats(dem, stat='skew')
HTrees <- read.csv("http://harvardforest.fas.harvard.edu/data/p03/hf032/hf032-02-tree.csv")
head(HTrees)
View(HTrees)
str(HTrees)
test <- subset(HTrees, species=="ACRU")
plot(test$xsite, test$ysite)
plot(test$xsite~test$ysite)
test <- subset(HTrees, species=="ACRU" & dbh91 != NA)
test <- subset(HTrees, species=="ACRU" & dbh91 != 'NA')
test <- subset(HTrees, species=="ACRU")
test <- subset(HTrees, species=="ACRU" & dbh91 != 'NA')
plot(test)
plot(test$xsite, test$ysite)
library(spdep)
nb7rt <- cell2nb(7, 7)
plot(nb7rt)
summary(nb7rt)
xyc <- attr(nb7rt, "region.id")
xy <- matrix(as.integer(unlist(strsplit(xyc, ":"))), ncol=2, byrow=TRUE)
plot(nb7rt, xy)
nb7rt <- cell2nb(7, 7, torus=TRUE)
summary(nb7rt)
plot(test)
plot(test$xsite, test$ysite)
data(meuse)
head(meuse)
data(meuse.grid)
coordinates(meuse.grid) <- c("x","y")
pist <- subset(HTrees, species=="PIST" & dbh91 != 'NA')
plot(pist$xsite, pist$ysite)
plot(quru, quri$ysite)
quru <- subset(HTrees, species=="QURU" & dbh91 != 'NA')
plot(quru, quri$ysite)
plot(quru, quru$ysite)
plot(quru$xsite, quru$ysite)
quru <- subset(HTrees, species=="QURU" & dbh91 != 'NA')
View(HTrees)
View(HTrees)
prse <- subset(HTrees, species=="PRSE" & dbh91 != 'NA')
plot(prse$xsite, prse$ysite)
HTrees <- read.csv("http://harvardforest.fas.harvard.edu/data/p03/hf032/hf032-02-tree.csv")
acru <- subset(HTrees, species=="ACRU" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Create subset of data for Prunus serotina
prse <- subset(HTrees, species=="PRSE" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Create subset of data for Pinus strobus
pist <- subset(HTrees, species=="PIST" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
library(raster)
help(raster)
coords(HTrees) <- c("xsite", "ysite")
library(sp)
coords(HTrees) <- c("xsite", "ysite")
coordinates(HTrees) <- c("xsite", "ysite")
extHTrees <- extent(HTrees)
r <- raster(ext=extent(HTrees), resolution=50)
r1 <- rasterize(acru, r, field=1)
r1 <- rasterize(HTrees, r, field=1)
plot(r1)
coordinates(acru) <- c("xsite", "ysite")
r1 <- rasterize(acru, r, field=1)
plot(r1)
r1 <- rasterize(prse, r, field=1)
plot(r1)
coordinates(prse) <- c("xsite", "ysite")
r1 <- rasterize(prse, r, field=1)
plot(r1)
HTrees <- read.csv("http://harvardforest.fas.harvard.edu/data/p03/hf032/hf032-02-tree.csv")
#Create subset of data for Acer rubrum
acru <- subset(HTrees, species=="ACRU" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Create subset of data for Prunus serotina
prse <- subset(HTrees, species=="PRSE" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Create subset of data for Pinus strobus
pist <- subset(HTrees, species=="PIST" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
library(raster) #the 'sp' packages gets loaded with these, so no need to load it separately
library(spdep)
#Convert tree data to SpatialPointsDataFrame, both for entire dataset, and for individual species
HTrees.spdf <- HTrees
coordinates(HTrees.spdf) <- c("xsite", "ysite")
pist.spdf <- pist
coordinates(pist.spdf) <- c("xsite", "ysite")
acru.spdf <- acru
coordinates(acru.spdf) <- c("xsite", "ysite")
prse.spdf <- prse
coordinates(prse.spdf) <- c("xsite", "ysite")
correlog(coordinates(acru.spdf), acru$dbh91, method="Moran")
library(pgirmess)
correlog(coordinates(acru.spdf), acru$dbh91, method="Moran")
acru.moran <- correlog(coordinates(acru.spdf), acru$dbh91, method="Moran", moran.test)
acru.moran <- correlog(coordinates(acru.spdf), acru$dbh91, method="Moran", nbclass=NULL, moran.test)
acru.sample <- acru.spdf[sample(1:nrow(acru.spdf), 300, replace=FALSE),]
acru.moran <- correlog(coordinates(acru.sample), acru.sample$dbh91, method="Moran",alternative='less')
acru.moran <- correlog(coordinates(acru.sample), acru.sample$dbh91, method="Moran",alternative="less"")
acru.moran <- correlog(coordinates(acru.sample), acru.sample$dbh91, method="Moran",alternative="less")
acru.moran <- correlog(coordinates(acru.sample), acru.sample$dbh91, method="Moran",alternative="less")
HTrees <- read.csv("http://harvardforest.fas.harvard.edu/data/p03/hf032/hf032-02-tree.csv")
#Create subset of data for Acer rubrum
acru <- subset(HTrees, species=="ACRU" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Create subset of data for Prunus serotina
prse <- subset(HTrees, species=="PRSE" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Create subset of data for Pinus strobus
pist <- subset(HTrees, species=="PIST" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
library(raster) #the 'sp' packages gets loaded with these, so no need to load it separately
library(spdep)
#Convert tree data to SpatialPointsDataFrame, both for entire dataset, and for individual species
HTrees.spdf <- HTrees
coordinates(HTrees.spdf) <- c("xsite", "ysite")
pist.spdf <- pist
coordinates(pist.spdf) <- c("xsite", "ysite")
acru.spdf <- acru
coordinates(acru.spdf) <- c("xsite", "ysite")
prse.spdf <- prse
coordinates(prse.spdf) <- c("xsite", "ysite")
acru.moran <- correlog(coordinates(acru.spdf), acru.spdf$dbh91, method="Moran", nbclass=NULL)
library(raster) #the 'sp' packages gets loaded with these, so no need to load it separately
library(spdep)
library(pgirmess)
#Convert tree data to SpatialPointsDataFrame, both for entire dataset, and for individual species
HTrees.spdf <- HTrees
coordinates(HTrees.spdf) <- c("xsite", "ysite")
pist.spdf <- pist
coordinates(pist.spdf) <- c("xsite", "ysite")
acru.spdf <- acru
coordinates(acru.spdf) <- c("xsite", "ysite")
prse.spdf <- prse
coordinates(prse.spdf) <- c("xsite", "ysite")
```
acru.moran <- correlog(coordinates(acru.spdf), acru.spdf$dbh91, method="Moran", nbclass=NULL)
plot(acru.moran)
jc.extent <- extent(-300,100,-700,-200)
#set up a blank raster
r <- raster(nrows=25, ncols=20, ext=jc.extent)
acru.rast <- rasterize(acru.spdf, r, field=1)
acru.rast[is.na(acru.rast)] <- 0
plot(acru.spdf, add=TRUE)
pist.rast <- rasterize(pist.spdf, r, field=1)
pist.rast[is.na(pist.rast)] <- 0
prse.rast <- rasterize(prse.spdf, r, field=1)
prse.rast[is.na(prse.rast)] <- 0
nb <- cell2nb(nrow=nrow(acru.rast), ncol=ncol(acru.rast))
nb.queen <- cell2nb(nrow=nrow(acru.rast), ncol=ncol(acru.rast), type='queen') #To calculate neighbors for queen configuration
```
lwb <- nb2listw(nb, style="B")
joincount.test(as.factor(acru.rast@data@values), lwb)
joincount.mc(as.factor(acru.rast@data@values), lwb, nsim=999, alternative='two.sided')
lwb.queen <- nb2listw(nb.queen, style="B")
joincount.mc(as.factor(acru.rast@data@values), lwb.queen, nsim=999, alternative='greater')
joincount.test(as.factor(acru.rast@data@values), lwb.queen, alternative='greater')
acru.geary <- correlog(coordinates(acru.sample), acru.sample$dbh91, method="Geary")
acru.rast <- rasterize(acru.spdf, r, field=1)
acru.rast[is.na(acru.rast)] <- 0
plot(acru.rast)
acru.rast.dbh <-rasterize(acru.spdf, r, fun=mean(dbh91))
acru.rast.dbh <-rasterize(acru.spdf, r, fun=mean(acru.spdf$dbh91))
help(rasterize)
acru.rast.dbh <-rasterize(acru.spdf, r, fun=mean)
plot(acru.rast.dbh)
acru.rast.dbh <-rasterize(acru.spdf, r, fun=mean(dbh91))
acru.rast.dbh <-rasterize(acru.spdf, r, fun=mean(dbh91))[2]
acru.rast.dbh <-rasterize(acru.spdf, r, fun=mean)[2]
plot(acru.rast.dbh)
acru.rast.dbh <-rasterize(acru.spdf, r, fun=mean)[[2]]
plot(acru.rast.dbh)
plot(MoranLocal(acru.rast.dbh)
)
plot(GearyLocal(acru.rast.dbh))
plot(acru.rast.dbh)
acru.geary <- correlog(coordinates(pist.sample), acru.sample$dbh91, method="Geary")
acru.moran <- correlog(coordinates(pist.spdf), pist.spdf$dbh91, method="Moran", nbclass=NULL)
plot(acru.moran) #plots the results
acru.geary <- correlog(coordinates(pist.sample), pist.sample$dbh91, method="Geary")
acru.geary <- correlog(coordinates(pist$dbh91), pist$dbh91, method="Geary")
acru.geary <- correlog(coordinates(pist.spdf), pist$dbh91, method="Geary")
plot(acru.geary)
help(moran.test)
acru.geary <- correlog(coordinates(pist.spdf), pist$dbh91, method="Geary", alternative="less")
acru.geary <- correlog(coordinates(pist.spdf), pist$dbh91, method="Geary", moran.test.alternative="less")
plot(GearyLocal(acru.rast.dbh))
plot(MoranLocal(acru.rast.dbh))
plot(GearyLocal(acru.rast.dbh))
plot(MoranLocal(acru.rast.dbh))
plot(GearyLocal(acru.rast.dbh))
plot(MoranLocal(acru.rast.dbh))
pist.rast.dbh <-rasterize(pist.spdf, r, fun=mean)[[2]]
plot(pist.rast.dbh)
plot(GearyLocal(pist.rast.dbh))
plot(MoranLocal(pist.rast.dbh))
plot(GearyLocal(pist.rast.dbh))
plot(MoranLocal(pist.rast.dbh))
plot(GearyLocal(pist.rast.dbh))
plot(pist.rast.dbh)
plot(GearyLocal(pist.rast.dbh))
plot(MoranLocal(pist.rast.dbh))
plot(GearyLocal(pist.rast.dbh))
plot(MoranLocal(pist.rast.dbh))
plot(pist.rast.dbh)
plot(GearyLocal(pist.rast.dbh))
plot(MoranLocal(pist.rast.dbh))
help(MoranLocal)
pist.rast.dbh <-rasterize(pist.spdf, r, fun=count)[
pist.rast.dbh <-rasterize(pist.spdf, r, fun=count)
pist.rast.dbh <-rasterize(pist.spdf, r, fun= fun=function(x,...)length(x))
pist.rast.dbh <-rasterize(pist.spdf, r, fun=function(x,...)length(x))
plot(pist.rast.dbh)
pist.rast.dbh <-rasterize(pist.spdf, r, fun=function(x,...)length(x))[[2]]
plot(pist.rast.dbh)
plot(GearyLocal(pist.rast.dbh))
plot(MoranLocal(pist.rast.dbh))
plot(GearyLocal(pist.rast.dbh))
plot(MoranLocal(pist.rast.dbh))
plot(pist.rast.dbh)
plot(GearyLocal(pist.rast.dbh))
plot(MoranLocal(pist.rast.dbh))
plot(GearyLocal(pist.rast.dbh))
plot(MoranLocal(pist.rast.dbh))
help(rasterize)
plot(GearyLocal(pist.rast.dbh))
plot(pist.rast.dbh)
plot(GearyLocal(pist.rast.dbh))
plot(MoranLocal(pist.rast.dbh))
plot(pist.rast.dbh)
plot(GearyLocal(pist.rast.dbh))
plot(MoranLocal(pist.rast.dbh))
plot(pist.rast.dbh)
plot(GearyLocal(pist.rast.dbh))
acru.rast.dbh <-rasterize(acru.spdf, r, fun=function(x,...)length(x))[[2]]
plot(GearyLocal(acru.rast.dbh))
plot(MoranLocal(acru.rast.dbh))
plot(acru.rast.dbh)
plot(GearyLocal(acru.rast.dbh))
plot(MoranLocal(acru.rast.dbh))
plot(GearyLocal(acru.rast.dbh))
plot(acru.rast.dbh)
plot(MoranLocal(acru.rast.dbh))
plot(acru.rast.dbh)
acru.rast.dbh <-rasterize(acru.spdf, r, fun=function(x,...)length(x))
str(acru.rast.dbh)
acru.rast.count <-rasterize(acru.spdf, r, fun=function(x,...)length(x))
plot(acru.rast.count)
x <- MoranLocal(acru.rast.dbh)
x <- MoranLocal(acru.rast.count)
acru.rast.count <-rasterize(acru.spdf, r, fun=function(x,...)length(x))[[1]]
x <- MoranLocal(acru.rast.count)
x
help(LocalMoran)
library(raster)
help(LocalMoran)
help(MoranLocal)
r <- raster(nrows=10, ncols=10)
r[] <- 1:ncell(r)
Moran(r)
f <- matrix(c(0,1,0,1,0,1,0,1,0), nrow=3)
Moran(r, f)
x2 <- MoranLocal(r, w=f)
plot(x2)
plot(r)
plot(c(x2,r)
)
HTrees <- read.csv("http://harvardforest.fas.harvard.edu/data/p03/hf032/hf032-02-tree.csv")
acru <- subset(HTrees, species=="ACRU" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
prse <- subset(HTrees, species=="PRSE" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Create subset of data for Pinus strobus
pist <- subset(HTrees, species=="PIST" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
library(raster) #the 'sp' packages gets loaded with these, so no need to load it separately
library(spdep)
library(pgirmess)
#Convert tree data to SpatialPointsDataFrame, both for entire dataset, and for individual species
HTrees.spdf <- HTrees
coordinates(HTrees.spdf) <- c("xsite", "ysite")
pist.spdf <- pist
coordinates(pist.spdf) <- c("xsite", "ysite")
acru.spdf <- acru
coordinates(acru.spdf) <- c("xsite", "ysite")
prse.spdf <- prse
coordinates(prse.spdf) <- c("xsite", "ysite")
#Define the extent for the join count analyses
jc.extent <- extent(-300,100,-700,-200)
#set up a blank raster
r <- raster(nrows=25, ncols=20, ext=jc.extent)
acru.rast <- rasterize(acru.spdf, r, field=1)
acru.rast[is.na(acru.rast)] <- 0
plot(acru.rast)
pist.rast <- rasterize(pist.spdf, r, field=1)
pist.rast[is.na(pist.rast)] <- 0
prse.rast <- rasterize(prse.spdf, r, field=1)
prse.rast[is.na(prse.rast)] <- 0
nb <- cell2nb(nrow=nrow(acru.rast), ncol=ncol(acru.rast))
lwb <- nb2listw(nb, style="B")
joincount.test(as.factor(acru.rast@data@values), lwb, alternative='greater')
HTrees <- read.csv("http://harvardforest.fas.harvard.edu/data/p03/hf032/hf032-02-tree.csv")
#Create subset of data for Acer rubrum
acru <- subset(HTrees, species=="ACRU" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Create subset of data for Prunus serotina
prse <- subset(HTrees, species=="PRSE" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Create subset of data for Pinus strobus
pist <- subset(HTrees, species=="PIST" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Load required packages
library(raster) #the 'sp' packages gets loaded with these, so no need to load it separately
library(spdep)
library(pgirmess)
#Convert tree data to SpatialPointsDataFrame, both for entire dataset, and for individual species
HTrees.spdf <- HTrees
coordinates(HTrees.spdf) <- c("xsite", "ysite")
pist.spdf <- pist
coordinates(pist.spdf) <- c("xsite", "ysite")
acru.spdf <- acru
coordinates(acru.spdf) <- c("xsite", "ysite")
prse.spdf <- prse
coordinates(prse.spdf) <- c("xsite", "ysite")
#Define the extent for the join count analyses
jc.extent <- extent(-300,100,-700,-200)
#set up a blank raster
r <- raster(nrows=25, ncols=20, ext=jc.extent)
acru.rast <- rasterize(acru.spdf, r, field=1)
acru.rast[is.na(acru.rast)] <- 0
#Generate neighbors list - the function is 'cell2nb' and the arguments are the number of rows and colums in your grid; you can simply get those characteristics from your any of your rasters using 'nrow' and 'ncol' commands, nested in the cell2nb function (as ilustrated below). Note, the default for this is 'rook', but you can change the join counts to 'queen' by adding the argument 'type="queen".
nb <- cell2nb(nrow=nrow(acru.rast), ncol=ncol(acru.rast))
#To calculate neighbors for queen configuration
nb.queen <- cell2nb(nrow=nrow(acru.rast), ncol=ncol(acru.rast), type='queen')
#Convert the neighbors list to a 'weights' list; again, this will be the same for all species we are analyzing. You an follow the example below using 'style="B" (as a Binary weights matrix). Again, calculate this for the queen setup as well as the default (rook) setup.
lwb <- nb2listw(nb, style="B")
lwb.queen <- nb2listw(nb.queen, style="B")
joincount.test(as.factor(acru.rast@data@values), lwb, alternative='greater')
plot(acru.rast)
prse.rast <- rasterize(prse.spdf,r,field=1)
prse.rast[is.na(acru.rast)] <- 0
joincount.test(as.factor(prse.rast@data@values), lwb, alternative='greater')
plot(prse.rast)
prse.rast[is.na(prse.rast)] <- 0
plot(prse.rast)
joincount.test(as.factor(prse.rast@data@values), lwb, alternative='greater')
joincount.test(as.factor(prse.rast@data@values), lwb.queen, alternative='greater')
pist.rast <- rasterize(pist.spdf,r,field=1)
pist.rast[is.na(pist.rast)] <- 0
plot(pist.rast)
joincount.test(as.factor(pist.rast@data@values), lwb.queen, alternative='greater')
joincount.test(as.factor(pist.rast@data@values), lwb, alternative='greater')
joincount.test(as.factor(pist.rast@data@values), lwb.queen, alternative='less')
joincount.test(as.factor(prse.rast@data@values), lwb.queen, alternative='less')
joincount.test(as.factor(acru.rast@data@values), lwb, alternative='less')
plot(acru.rast)
plot(pist.rast)
plot(acru.rast)
plot(pist.rast)
plot(prse.rast)
joincount.test(as.factor(prse@data@values), lwb, alternative='less')
joincount.test(as.factor(prse.rast@data@values), lwb, alternative='less')
joincount.test(as.factor(prse.rast@data@values), lwb, alternative='greater')
joincount.test(as.factor(prse.rast@data@values), lwb.queen, alternative='greater')
summary(joincount.test(as.factor(prse.rast@data@values), lwb.queen, alternative='greater'))
str(joincount.test(as.factor(prse.rast@data@values), lwb.queen, alternative='greater'))
HTrees <- read.csv("http://harvardforest.fas.harvard.edu/data/p03/hf032/hf032-02-tree.csv")
acru <- subset(HTrees, species=="ACRU" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Create subset of data for Prunus serotina
prse <- subset(HTrees, species=="PRSE" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
#Create subset of data for Pinus strobus
pist <- subset(HTrees, species=="PIST" & dbh91 != 'NA', select=c("xsite", "ysite", "dbh91"))
library(raster) #the 'sp' packages gets loaded with these, so no need to load it separately
library(spdep)
library(pgirmess)
#Convert tree data to SpatialPointsDataFrame, both for entire dataset, and for individual species
HTrees.spdf <- HTrees
coordinates(HTrees.spdf) <- c("xsite", "ysite")
pist.spdf <- pist
coordinates(pist.spdf) <- c("xsite", "ysite")
acru.spdf <- acru
coordinates(acru.spdf) <- c("xsite", "ysite")
prse.spdf <- prse
coordinates(prse.spdf) <- c("xsite", "ysite")
acru.sample <- acru.spdf[sample(1:nrow(acru.spdf), 300, replace=FALSE),]
acru.moran <- correlog(coordinates(acru.sample), acru.sample$dbh91, method="Moran", nbclass=NULL)
plot(acru.moran) #plots the results
set.seed(1)
acru.sample <- acru.spdf[sample(1:nrow(acru.spdf), 300, replace=FALSE),]
#plot(acru.sample) #plot if you want to see waht the random sample of data looks like
plot(acru.sample)
acru.moran <- correlog(coordinates(acru.sample), acru.sample$dbh91, method="Moran", nbclass=NULL)
#Can view the textual results by simply typing 'acru.moran'
plot(acru.moran) #plots the results
set.seed(1)
acru.moran <- correlog(coordinates(acru.sample), acru.sample$dbh91, method="Moran", nbclass=NULL)
#Can view the textual results by simply typing 'acru.moran'
plot(acru.moran) #plots the results
acru.geary <- correlog(coordinates(acru.sample), acru.sample$dbh91, method="Geary")
plot(acru.geary)
setwd("D:/TregliaFiles/Documents/Dropbox/Teaching/TU_AdvancedGIS_Modeling//TU_LandscapeAnalysis_Documents/Assignments/Misc")
Boreality <- read.table("Boreality.txt", header=TRUE)
Boreality$Bor<-sqrt(1000*(Boreality$nBor+1)/(Boreality$nTot))
wet.dist <- vegdist(scale(Boreality$Wet), method="euclid")
library(vegan)
library(ecodist)
wet.dist <- vegdist(scale(Boreality$Wet), method="euclid")
wet.dist2 <- distance(Boreality$Wet, method="mahalanobis")
head(wet.dist)
head(wet.dist2)
wet.dist <- dist(scale(Boreality$Wet), method="euclid")
head(wet.dist)
mantel(wet.dist2~geog.dist)
geog.dist <- dist(Boreality[,c("x","y")], method="euclidean")
mantel(wet.dist2~geog.dist)
mantel(wet.dist~geog.dist)
wet.dist <- dist((Boreality$Wet), method="euclid")
head(wet.dist)
mantel(wet.dist~geog.dist)
library(PCNM)
help(PCNM)
Boreality <- read.table("E:/My Documents/Dropbox/Teaching/TU_AdvancedGIS_Modeling/TU_LandscapeAnalysis_Documents/Assignments/Misc/Boreality.txt", header=TRUE)
Boreality <- read.table("D:/TregliaFiles/DocumentsDropbox/Teaching/TU_AdvancedGIS_Modeling/TU_LandscapeAnalysis_Documents/Assignments/Misc/Boreality.txt", header=TRUE)
Boreality <- read.table("D:/TregliaFiles/Documents/Dropbox/Teaching/TU_AdvancedGIS_Modeling/TU_LandscapeAnalysis_Documents/Assignments/Misc/Boreality.txt", header=TRUE)
library(ecodist)
library(gstat)
library(nlme)
Boreality <- read.table("Boreality.txt", header=TRUE)
Boreality$Bor<-sqrt(1000*(Boreality$nBor+1)/(Boreality$nTot))
geog.dist <- dist(Boreality[,c("x","y")], method="euclidean")
library(vegan)
pcnm(geog.dist)
pcnm1 <-PCNM(geog.dist)
t<- pcnm(geog.dist)
ls()
plot(Boreality[,2:3], t$vectors[,1])
plot(Boreality[,2:3], t$vectors[,3])
svalue(Boreality[,2:3], t$vectors[,3])
s.value(Boreality[,2:3], t$vectors[,3])
help(s.value)
s.value(Boreality[,2:3], t$vectors[,1])
s.value(Boreality[,2:3], t$vectors[,5])
s.value(Boreality[,2:3], t$vectors[,6])
dim(t)
str(t)
head(t[1])
str(t)
t2 <- PCNM(geog.dist, dbMEM=TRUE,all=TRUE)
str(t2)
plot(t1)
plot(t2)
plot(t2$vectors)
